/*
 * The SMS Works API
 *
 * The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed UK messages are refunded.
 *
 * The version of the OpenAPI document: 1.9.0
 * Contact: support@thesmsworks.co.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing MessagesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MessagesApiTests : IDisposable
    {
        private MessagesApi instance;

        public MessagesApiTests()
        {
            instance = new MessagesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessagesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MessagesApi
            //Assert.IsType<MessagesApi>(instance);
        }

        /// <summary>
        /// Test MessageSchedulePost
        /// </summary>
        [Fact]
        public void MessageSchedulePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Message smsMessage = null;
            //var response = instance.MessageSchedulePost(smsMessage);
            //Assert.IsType<List<ScheduledMessageResponse>>(response);
        }

        /// <summary>
        /// Test MessageSendPost
        /// </summary>
        [Fact]
        public void MessageSendPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Message smsMessage = null;
            //var response = instance.MessageSendPost(smsMessage);
            //Assert.IsType<SendMessageResponse>(response);
        }

        /// <summary>
        /// Test MessagesFailedPost
        /// </summary>
        [Fact]
        public void MessagesFailedPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Query query = null;
            //var response = instance.MessagesFailedPost(query);
            //Assert.IsType<List<MessageResponse>>(response);
        }

        /// <summary>
        /// Test MessagesInboxPost
        /// </summary>
        [Fact]
        public void MessagesInboxPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Query query = null;
            //var response = instance.MessagesInboxPost(query);
            //Assert.IsType<List<MessageResponse>>(response);
        }

        /// <summary>
        /// Test MessagesMessageidDelete
        /// </summary>
        [Fact]
        public void MessagesMessageidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageid = null;
            //var response = instance.MessagesMessageidDelete(messageid);
            //Assert.IsType<DeletedMessageResponse>(response);
        }

        /// <summary>
        /// Test MessagesMessageidGet
        /// </summary>
        [Fact]
        public void MessagesMessageidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageid = null;
            //var response = instance.MessagesMessageidGet(messageid);
            //Assert.IsType<MessageResponse>(response);
        }

        /// <summary>
        /// Test MessagesPost
        /// </summary>
        [Fact]
        public void MessagesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Query query = null;
            //var response = instance.MessagesPost(query);
            //Assert.IsType<List<MessageResponse>>(response);
        }

        /// <summary>
        /// Test MessagesScheduleGet
        /// </summary>
        [Fact]
        public void MessagesScheduleGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MessagesScheduleGet();
            //Assert.IsType<ScheduledMessagesResponse>(response);
        }

        /// <summary>
        /// Test MessagesScheduleMessageidDelete
        /// </summary>
        [Fact]
        public void MessagesScheduleMessageidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageid = null;
            //var response = instance.MessagesScheduleMessageidDelete(messageid);
            //Assert.IsType<CancelledMessageResponse>(response);
        }

        /// <summary>
        /// Test SendFlashMessage
        /// </summary>
        [Fact]
        public void SendFlashMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Message smsMessage = null;
            //var response = instance.SendFlashMessage(smsMessage);
            //Assert.IsType<SendMessageResponse>(response);
        }
    }
}
